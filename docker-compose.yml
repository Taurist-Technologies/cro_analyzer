version: '3.8'

services:
  # Redis - Message broker and result backend
  redis:
    image: redis:7-alpine
    container_name: cro_analyzer_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: unless-stopped

  # FastAPI - Web API Server
  api:
    build: .
    container_name: cro_analyzer_api
    ports:
      - "8000:8000"
    environment:
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - WORKER_MODE=false
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --workers 2
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker - Background task processor
  worker:
    build: .
    container_name: cro_analyzer_worker
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - WORKER_MODE=true
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./:/app
    command: celery -A celery_app worker --loglevel=info --concurrency=5 --max-tasks-per-child=10
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "celery -A celery_app inspect ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Flower - Celery monitoring UI (optional, for development)
  flower:
    build: .
    container_name: cro_analyzer_flower
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
    depends_on:
      - redis
      - worker
    command: celery -A celery_app flower --port=5555
    restart: unless-stopped
    profiles:
      - monitoring  # Only start with: docker-compose --profile monitoring up

volumes:
  redis_data:
    driver: local

networks:
  default:
    name: cro_analyzer_network
