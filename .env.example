# CRO Analyzer Environment Configuration
# Copy this file to .env and fill in your actual values

# ============================================
# REQUIRED: Anthropic API Configuration
# ============================================
# Get your API key from: https://console.anthropic.com/
ANTHROPIC_API_KEY=

# ============================================
# REQUIRED: Redis Configuration
# ============================================
# Redis URL for caching and task queue
# Format: redis://[username:password@]host:port/db
# Default for local development: redis://localhost:6379/0
REDIS_URL=redis://localhost:6379/0

# ============================================
# REQUIRED: Celery Configuration
# ============================================
# Celery message broker (usually same as REDIS_URL)
CELERY_BROKER_URL=redis://localhost:6379/0

# Celery result backend (use different Redis DB for results)
CELERY_RESULT_BACKEND=redis://localhost:6379/1

# ============================================
# OPTIONAL: Worker Configuration
# ============================================
# Set to 'true' if running in worker mode (for Docker)
# Leave empty or set to 'false' for API mode
WORKER_MODE=false

# Number of concurrent Celery workers (default: 8, was 5)
# Increased to handle higher throughput and reduce queue wait times
# Adjust based on your server resources (CPU cores)
CELERY_WORKER_CONCURRENCY=8

# Number of uvicorn workers for API server (default: 2)
# Only applies in API mode
API_WORKERS=2

# ============================================
# OPTIONAL: Browser Pool Configuration
# ============================================
# Number of pre-warmed browser instances (default: 10, was 5)
# Increased to handle higher concurrency and reduce timeout errors
BROWSER_POOL_SIZE=10

# Max pages a browser can handle before recycling (default: 10)
BROWSER_MAX_PAGES=10

# Browser timeout in seconds before recycling (default: 600 = 10 minutes, was 300)
# Increased to reduce browser recycling overhead during high load
BROWSER_TIMEOUT=600

# ============================================
# OPTIONAL: Cache Configuration
# ============================================
# Cache TTL in seconds (default: 86400 = 24 hours)
CACHE_TTL=86400

# ============================================
# OPTIONAL: Monitoring
# ============================================
# Flower monitoring UI port (default: 5555)
FLOWER_PORT=5555

# Flower basic auth (optional)
# Format: username:password
# FLOWER_BASIC_AUTH=admin:secret

# ============================================
# DOCKER DEPLOYMENT NOTES
# ============================================
# For Docker Compose:
# - Services communicate via Docker network
# - Use service names as hostnames (e.g., redis://redis:6379/0)
# - API_WORKERS and CELERY_WORKER_CONCURRENCY should match your resources
# - Set WORKER_MODE=true for worker containers

# For Render Deployment:
# - Use Render's internal Redis URL
# - Scale workers separately from API instances
# - Set appropriate concurrency based on Render plan
# - Use environment groups for shared config

# ============================================
# SECURITY NOTES
# ============================================
# - NEVER commit .env file to git (already in .gitignore)
# - Rotate API keys regularly
# - Use Redis AUTH in production (add password to URLs)
# - Consider using secrets management (AWS Secrets Manager, etc.)
